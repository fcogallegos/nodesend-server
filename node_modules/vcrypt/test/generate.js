var rsaKeyPair = require("rsa-keypair");
var fs = require("fs");
var path = require("path");

module.exports=()=>{
    if(fs.existsSync(path.resolve(__dirname, "../client/keys"))&&fs.existsSync(path.resolve(__dirname, "../server/keys"))&&fs.existsSync(path.resolve(__dirname, "../server/keys/private.pem"))&&fs.existsSync(path.resolve(__dirname, "../server/keys/public.pem"))&&fs.existsSync(path.resolve(__dirname, "../client/keys/private.pem"))&&fs.existsSync(path.resolve(__dirname, "../client/keys/public.pem"))){
        console.log(`[v-crypt] notice Using premade keys.`)
        return {
            client:{
                private: fs.readFileSync(path.resolve(__dirname, "../client/keys/private.pem"), ()=>{}),
                public: fs.readFileSync(path.resolve(__dirname, "../client/keys/public.pem"), ()=>{})
            },
            server:{
                private: fs.readFileSync(path.resolve(__dirname, "../server/keys/private.pem"), ()=>{}),
                public: fs.readFileSync(path.resolve(__dirname, "../server/keys/public.pem"), ()=>{})
            }
        };
    } else{
        return function(paramsC, paramsS){
            if(fs.existsSync(path.resolve(__dirname, "../client/keys"))){
                fs.rmdir(path.resolve(__dirname, "../server/keys"), (err)=>{
                    if (err) throw err;
                })
            }
            if(fs.existsSync(path.resolve(__dirname, "../server/keys"))){
                fs.rmdir(path.resolve(__dirname, "../client/keys"), (err)=>{
                    if (err) throw err;
                })
            }
            var keysC = rsaKeyPair.generate(paramsC.bits, paramsC.expo, paramsC.pass);
            var keysS = rsaKeyPair.generate(paramsS.bits, paramsS.expo, paramsS.pass);
            fs.mkdir(path.resolve(__dirname, "../server/keys"), (err)=>{
                if (err) throw err;
                fs.writeFile(path.resolve(__dirname, "../server/keys/private.pem"), keysS.privateKey, (err)=>{if (err) throw err;});
                fs.writeFile(path.resolve(__dirname, "../server/keys/public.pem"), keysS.publicKey, (err)=>{if (err) throw err;});
                fs.mkdir(path.resolve(__dirname, "../client/keys"), (err)=>{
                    if (err) throw err;
                    fs.writeFile(path.resolve(__dirname, "../client/keys/private.pem"), keysC.privateKey, (err)=>{if (err) throw err;});
                    fs.writeFile(path.resolve(__dirname, "../client/keys/public.pem"), keysC.publicKey, (err)=>{if (err) throw err;});
                });
            });
            console.log(`[v-crypt] notice Your client and server keys were saved in project's client and server dirs for future use.`);
            return {
                client:{
                    private: keysC.privateKey,
                    public: keysC.publicKey
                },
                server:{
                    private: keysS.privateKey,
                    public: keysS.publicKey
                }
            };
        }
    }
}